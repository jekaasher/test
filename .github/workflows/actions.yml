name: CICD

on:
  push:
    branches: [dev]
    paths-ignore: 
#      - '.github/workflows/**'
      - '.deployments/**'
    tags:
      - 'v[0-9].[0-9]+.[0-9]+'
      - 'rc-[0-9]+'
  pull_request:
    branches: [release, main]
    paths-ignore: 
#      - '.github/workflows/**'
      - '.deployments/**'
      
# Do not forget about keys
# Testing new key
env:
  PROJECT_ID: ${{ secrets.GCP_PROJECT }}
  GCP_ZONE: europe   # TODO: update to cluster zone
  IMAGE: alpine_main
  REPOSITORY: test #for artifact registry only 
  CLUSTER_NAME: test-cluster
  CLUSTER_ZONE: europe-central2

jobs:
  Setup-build-publish:
    name: Setup, Build, Push, Deploy
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      # Get image version tag
      - name: Get new tag
        uses: ./.github/workflows/get-new-tag

      # Generete tag for docker image
      - name: Docker tag
        id: image-tag
        uses: ./.github/workflows/docker-tag-action
        with:
          project-id: $PROJECT_ID
          image-name: $IMAGE
          image-version: $IMAGE_VERSION
          repository: $REPOSITORY
          zone: $GCP_ZONE
      
      # Build the Docker image with tag for google container registry
      - name: Build
        run: |-
          docker build \
            --tag "${{ steps.image-tag.outputs.gcr-tag }}" \
            --build-arg GITHUB_SHA="$GITHUB_SHA" \
            --build-arg GITHUB_REF="$GITHUB_REF" \
            .
      # Send status message depending job.status
    #  - name: Sending status message
    #    if: ${{ always() }} 
     #   uses: rtCamp/action-slack-notify@v2
      #  env:
       #   SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
        #  SLACK_MESSAGE: "Built ${{ env.IMAGE_VERSION }} ${{ job.status }}"
       #   SLACK_COLOR: ${{ job.status }}

      # After successful build add tag
      - name: Update release number
        if: ${{ github.base_ref == 'main' || github.base_ref == 'release' }}
        run: git tag $IMAGE_VERSION && git push --tags

      # Push the Docker image to Google Container Registry
      - name: Publish
        uses: ./.github/workflows/push-to-gcr-action
        with: 
          service-account-key: ${{ secrets.GCP_SERVICE_ACCOUNT_KEY }}
          project-id: ${{ secrets.GCP_PROJECT }}
          image: ${{ steps.image-tag.outputs.gcr-tag }}

       # Re-tag image for artifact registry
    #  - name: Re-tag
    #    run: docker tag ${{ steps.image-tag.outputs.gcr-tag }} ${{ steps.image-tag.outputs.gar-tag }}

       # Push the Docker image to Google Artifact Registry
    #  - name: Publish
    #    uses: ./.github/workflows/push-to-gar-action
    #    with: 
    #       service-account-key: ${{ secrets.GCP_SERVICE_ACCOUNT_KEY }}
    #       project-id: ${{ secrets.GCP_PROJECT }}
    #       image: ${{ steps.image-tag.outputs.gar-tag }}
    #       zone: $GCP_ZONE

      - name: Deploy
        uses: ./.github/workflows/deploy-action
        with:
          service-account-key: ${{ secrets.GCP_DEPLOY_SERVICE_ACCOUNT_KEY }}
          image: ${{ steps.image-tag.outputs.gcr-tag }}
          zone: ${{ env.CLUSTER_ZONE }}
          cluster: ${{ env.CLUSTER_NAME }}

      # Send status message depending job.status
     # - name: Sending status message
       # if: ${{ always() && github.base_ref == 'main' }}
       # uses: rtCamp/action-slack-notify@v2
       # env:
         # SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
        #  SLACK_MESSAGE: "Deploy ${{ env.IMAGE_VERSION }} ${{ job.status }}"
       #   SLACK_COLOR: ${{ job.status }}
